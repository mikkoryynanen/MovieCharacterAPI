// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieCharacterAPI.Data;

namespace MovieCharacterAPI.Migrations
{
    [DbContext(typeof(MovieCharacterAPIDbContext))]
    partial class MovieCharacterAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            MoviesId = 1,
                            CharactersId = 1
                        },
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 2
                        },
                        new
                        {
                            MoviesId = 3,
                            CharactersId = 3
                        },
                        new
                        {
                            MoviesId = 4,
                            CharactersId = 3
                        });
                });

            modelBuilder.Entity("MovieCharacterAPI.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Iron man",
                            CharacterPicture = "",
                            FullName = "Robert Downey Jr",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Frodo Baggins",
                            CharacterPicture = "",
                            FullName = "Elijah Wood",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "James Bond",
                            CharacterPicture = "",
                            FullName = "Roger Moore",
                            Gender = "Male"
                        });
                });

            modelBuilder.Entity("MovieCharacterAPI.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The films based on characters that appear in comic books published by Marvel Comics",
                            Name = "Marvel cinematic universe"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fantasy films based on the novel written by J.R.R. Tolkien",
                            Name = "The lord of the rings"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A british secret agent working for MI6 under the codename 007",
                            Name = "James Bond"
                        });
                });

            modelBuilder.Entity("MovieCharacterAPI.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoviePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Jon Favreau",
                            FranchiseId = 1,
                            Genre = "Action",
                            MoviePicture = "url",
                            MovieTitle = "Iron man",
                            ReleaseYear = "2008",
                            Trailer = "url"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Peter Jackson",
                            FranchiseId = 2,
                            Genre = "Fantasy",
                            MoviePicture = "url",
                            MovieTitle = "The fellowship of the ring",
                            ReleaseYear = "2001",
                            Trailer = "url"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Lewis Gilbert",
                            FranchiseId = 3,
                            Genre = "Action",
                            MoviePicture = "url",
                            MovieTitle = "Moonraker",
                            ReleaseYear = "1979",
                            Trailer = "url"
                        },
                        new
                        {
                            Id = 4,
                            Director = "John Glen",
                            FranchiseId = 3,
                            Genre = "Action",
                            MoviePicture = "url",
                            MovieTitle = "Octopussy",
                            ReleaseYear = "1983",
                            Trailer = "url"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("MovieCharacterAPI.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieCharacterAPI.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieCharacterAPI.Models.Movie", b =>
                {
                    b.HasOne("MovieCharacterAPI.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieCharacterAPI.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
